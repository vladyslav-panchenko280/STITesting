@charset "UTF-8";@-webkit-keyframes marqueeOne{0%{transform:translate(100%,0)}to{transform:translate(-100%,0)}}@keyframes marqueeOne{0%{transform:translate(100%,0)}to{transform:translate(-100%,0)}}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1;font-family:"Inter";font-weight:400;overflow-y:scroll;overflow-x:hidden;width:100%;height:100%;position:relative}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:"Inter";font-weight:500;font-style:normal;src:url(../font/Inter/Inter-Medium.woff2) format("woff2"),url(../font/Inter/Inter-Medium.woff) format("woff"),url(../font/Inter/Inter-Medium.eot) format("eot"),url(../font/Inter/Inter-Medium.ttf) format("ttf");font-display:swap}@font-face{font-family:"Inter";font-weight:400;font-style:normal;src:url(../font/Inter/Inter-Regular.woff2) format("woff2"),url(../font/Inter/Inter-Regular.woff) format("woff"),url(../font/Inter/Inter-Regular.eot) format("eot"),url(../font/Inter/Inter-Regular.ttf) format("ttf");font-display:swap}@font-face{font-family:"Inter";font-weight:600;font-style:normal;src:url(../font/Inter/Inter-SemiBold.woff2) format("woff2"),url(../font/Inter/Inter-SemiBold.woff) format("woff"),url(../font/Inter/Inter-SemiBold.eot) format("eot"),url(../font/Inter/Inter-SemiBold.ttf) format("ttf");font-display:swap}@font-face{font-family:"Inter";font-weight:700;font-style:normal;src:url(../font/Inter/Inter-Bold.woff2) format("woff2"),url(../font/Inter/Inter-Bold.woff) format("woff"),url(../font/Inter/Inter-Bold.eot) format("eot"),url(../font/Inter/Inter-Bold.ttf) format("ttf");font-display:swap}@font-face{font-family:"Playfair Display";font-weight:400;font-style:italic;src:url(../font/PlayfairDisplay/PlayfairDisplay-Italic.woff2) format("woff2"),url(../font/PlayfairDisplay/PlayfairDisplay-Italic.woff) format("woff"),url(../font/PlayfairDisplay/PlayfairDisplay-Italic.eot) format("eot"),url(../font/PlayfairDisplay/PlayfairDisplay-Italic.ttf) format("ttf");font-display:swap}@font-face{font-family:"Playfair Display";font-weight:700;font-style:italic;src:url(../font/PlayfairDisplay/PlayfairDisplay-BoldItalic.woff2) format("woff2"),url(../font/PlayfairDisplay/PlayfairDisplay-BoldItalic.woff) format("woff"),url(../font/PlayfairDisplay/PlayfairDisplay-BoldItalic.eot) format("eot"),url(../font/PlayfairDisplay/PlayfairDisplay-BoldItalic.ttf) format("ttf");font-display:swap}.btnContainer{width:130px;height:55px;position:relative;z-index:1}.btn,.btnContainer::before{width:125px;height:50px;border-radius:10px}.btnContainer::before{content:"";background:#2d2a26;bottom:0;right:-1px;position:absolute;z-index:-1}.btn{font-family:"Inter";font-size:14px;font-weight:600;color:#2d2a26;font-style:normal;border:1px solid #2d2a26;background:#fcfcf0;transition:.3s;cursor:pointer}.btn:hover{transform:translate(2px,2px)}.btn:focus{transform:translate(2px,2px)}.btn--blue{background:#8abadd}.btn--red{background:#f87c56}.btn--pink{background:#ecb3cb}.loginBtnContainer{width:55px;height:55px;position:relative}.loginBtn,.loginBtnContainer::before{width:50px;height:50px;border-radius:10px}.loginBtnContainer::before{content:"";background:#2d2a26;bottom:0;right:0;position:absolute;z-index:-1}.loginBtn{z-index:3;border:1px solid #2d2a26;background:#fcfcf0;transition:.3s;cursor:pointer}.loginBtn:hover{transform:translate(2px,2px)}.loginBtn:focus{transform:translate(2px,2px)}.btnMargin{margin:0 20px}.bigBtnContainer,.bigBtnWhiteContainer{width:160px;height:55px;position:relative;z-index:1}.bigBtnContainer::before,.bigBtnWhiteContainer::before{content:"";width:155px;height:50px;bottom:0;position:absolute;z-index:-1;border-radius:10px}.bigBtnContainer::before{background:#2d2a26;right:-6px}.bigBtnWhiteContainer::before{background:#fff;border:1px solid #2d2a26;right:-3px}.bigBtn{width:155px}.inputWithButtonContainer{width:100%;display:flex;align-items:center;justify-content:center}.inputWithButtonContainer>input[type=text]{width:100%;height:60px;font-family:"Inter";font-size:18px;font-weight:500;color:#2d2a26;font-style:normal;max-width:300px;border:1px solid #2d2a26;background:#fff;border-radius:10px 0 0 10px;padding-left:15px;z-index:2}.inputWithButtonContainer>input[type=text]:focus{border-color:#3898ec;outline:0}.inputWithButtonContainer>input[type=submit]{width:100%;height:60px;font-family:"Inter";font-size:18px;font-weight:500;color:#2d2a26;font-style:normal;max-width:140px;border:1px solid #2d2a26;z-index:1;background:#ecb3cb;border-radius:0 10px 10px 0}.inputWithButtonContainer>input[type=submit]:focus{border-color:#f68d2e;outline:0}.inputWithButtonContainer>input[type=submit]:hover{border-color:#f68d2e;outline:0}.inputWithButtonSmall{display:flex;align-items:center;justify-content:center}.inputWithButtonSmall>input[type=text]{width:100%;height:50px;font-family:"Inter";font-size:18px;font-weight:500;color:#2d2a26;font-style:normal;max-width:250px;border:1px solid #2d2a26;background:#fff;border-radius:10px 0 0 10px;padding-left:15px;z-index:2}.inputWithButtonSmall>input[type=text]:focus{border-color:#3898ec;outline:0}.inputWithButtonSmall>input[type=submit]{height:50px;font-family:"Inter";font-size:16px;font-weight:500;color:#2d2a26;font-style:normal;width:120px;border:1px solid #2d2a26;z-index:1;background:#ecb3cb;border-right:none;border-radius:0 10px 10px 0}.inputWithButtonSmall>input[type=submit]:focus{border-color:#f68d2e;outline:0}.inputWithButtonSmall>input[type=submit]:hover{border-color:#f68d2e;outline:0}@media screen and (max-width:768px){.inputWithButtonContainer>input[type=submit],.inputWithButtonContainer>input[type=text]{border-radius:0}}@media screen and (max-width:580px){.inputWithButtonSmall{margin:40px 0}}.header__links>li,.marquee{font-family:"Inter";color:#2d2a26;font-style:normal}.marquee,.marquee__text>span{font-size:12px;font-weight:700;position:relative}.marquee{background:linear-gradient(90deg,#274cd6 0,#cf63c6 49.91%,#80d7c4 100%);width:100%;height:36px;align-items:center;justify-content:center;display:flex}.marquee__text{position:absolute;white-space:nowrap;overflow:hidden;-webkit-animation:marqueeOne 35s infinite linear;animation:marqueeOne 35s infinite linear;width:2000px}.marquee__text>span{font-family:"Inter";color:#fff;font-style:normal;margin:0 35px}.marquee__text>span::before{content:"";background-image:url(../img/icons/ðŸ‡ºðŸ‡¸.png);width:18px;height:13px;position:absolute;background-size:cover;left:-41px;bottom:2px;background-position:center}.overlay{width:100vw;height:100vh;display:flex;align-items:center;justify-content:center;background:rgba(51,51,51,.4);position:fixed;z-index:1000}.menuMobile{border-radius:15px;background:#fcfcf0;border:1px solid #2d2a26;width:305px;height:300px;padding-left:30px}.menuMobile__exitContainer{margin:20px;display:flex;align-items:center;justify-content:end}*,:after,:before{box-sizing:border-box}.header,.header__container{display:flex;align-items:center;width:100%}.header{height:118px;justify-content:center;flex-direction:column;background:#fcfcf0;position:fixed;border-bottom:1px solid #2d2a26;z-index:100}.header__container{justify-content:space-between;height:82px;max-width:1240px;padding:0 20px}.header__navigation{height:inherit}.header__links{display:flex;align-items:center;justify-content:start;height:inherit}.header__links>li{font-size:14px;font-weight:600;padding:0 10px;height:100%;transition:.3s;cursor:pointer}.header__links>li:hover{margin-bottom:5px}.header__buttonsContainer,.header__links>li>a{display:flex;align-items:center;justify-content:center}.header__links>li>a{height:inherit;color:#2d2a26;text-decoration:none}.header__buttonsContainer{height:100%}@media screen and (max-width:992px){.header__buttonsContainer{margin-right:10px}}@media screen and (max-width:580px){.header__navigation{height:auto}.header__buttonsContainer{margin:0}.header__links{flex-direction:column;width:80%;align-items:flex-start;margin-bottom:10px}.header__links>li{height:40px;padding:0;font-family:"Inter";font-size:20px;font-weight:700;color:#2d2a26;font-style:normal}}.intro{background:linear-gradient(180deg,#dedde2 0,#e3e6ed 44.29%,#dde6ef 100%);width:100%;height:100vh;display:flex;align-items:flex-end;justify-content:center}.intro__container{width:1240px;height:calc(100% - 118px);display:flex;align-items:center;justify-content:space-between;padding:0 20px}.intro__content{z-index:2}.intro__text{font-family:"Inter";font-size:68px;font-weight:700;color:#2d2a26;font-style:normal;width:45%;letter-spacing:-3px;line-height:95%;margin-bottom:40px}.intro__span{font-family:"Fairplay Display";font-style:italic}.intro__span--blue{color:#307fe2}.intro__span--red{color:#f87c56}.intro__photo{position:absolute;right:0}@media screen and (max-width:992px){.intro{height:700px}.intro__photo>picture>img{width:540px}.intro__text{font-size:44px}}@media screen and (max-width:580px){.intro{height:930px}.intro__container,.intro__content{align-items:flex-start;justify-content:center}.intro__content{display:flex;align-items:center;flex-direction:column}.intro__photo,.intro__photo>picture>img{width:100%}.intro__text{font-size:44px;width:85%;text-align:center;margin-top:50px}}.partners,.partners__logos>li,.partners__logos>li>a{display:flex;align-items:center;justify-content:center}.partners{width:100%;height:100%;min-height:110px;background:#fcfcf0}.partners__container,.partners__logos{display:flex;align-items:center;justify-content:space-between;height:100%}.partners__container{width:1240px;padding:20px}.partners__logos{width:100%;margin-right:5%;gap:0;flex-wrap:wrap}.partners__logos>li,.partners__logos>li>a{height:inherit}.partners__logos>li>a{width:100%}.partners__logos>li>a>picture>img{width:100%}@media screen and (max-width:992px){.partners__container{flex-direction:column;row-gap:20px}.partners__logos{margin:0}.partners__logos>li{width:45%}}.ourMission{display:flex;align-items:center;justify-content:center;width:100%;height:640px;background:#2d2a26;position:relative}.ourMission__container{width:1240px;height:100%;display:flex;align-items:center;justify-content:space-between;padding:0 20px}.ourMission__illustation{margin-top:70px}.ourMission__content{width:50%}.ourMission__text{font-family:"Inter";font-size:48px;font-weight:700;color:#fff;font-style:normal;z-index:2;line-height:105%;letter-spacing:-3px;margin-bottom:20px;width:90%}.ourMission__span{font-family:"Fairplay Display";font-style:italic}.ourMission__span--salmon{color:#f5cabf}.ourMission__span--red{color:#f87c56}.ourMission__span--blue{color:#8abadd}.ourMission__subtext{font-family:"Inter";font-size:18px;font-weight:400;color:#fff;font-style:normal;margin-bottom:30px;line-height:150%;letter-spacing:-.01em}@media screen and (max-width:992px){.ourMission{width:100%;height:100%}.ourMission__container{margin-top:50px;flex-wrap:wrap;justify-content:center}.ourMission__text{font-size:36px}.ourMission__illustation{order:2;margin:0}.ourMission__illustation>picture>img{width:100%}.ourMission__content{width:85%;order:1}}.stepByStep,.stepByStep__steps>li{width:100%;height:100%;background:no-repeat center url(../img/backgrounds/gradient-background.jpg);background-size:cover}.stepByStep__steps{position:relative}.stepByStep__steps>li{width:inherit;height:590px;border:1px solid #2d2a26;display:flex;flex-direction:column}.stepByStep__number{font-family:"Inter";font-size:16px;font-weight:600;color:#2d2a26;font-style:normal;width:160px;height:55px;display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;margin:0 auto;background:#fff;border-radius:1px 1px 60px 60px;border:3px solid #2d2a26;border-top:none}.stepByStep__container{width:100%;height:100%;display:flex;align-items:center;justify-content:space-between;max-width:1240px;padding:0 20px;align-self:center}.stepByStep__content{width:40%}.stepByStep__title{font-family:"Inter";font-size:48px;font-weight:700;color:#fff;font-style:normal;z-index:2;line-height:105%;letter-spacing:-3px;margin-bottom:20px;width:90%}.stepByStep__span{font-family:"Fairplay Display";font-style:italic}.stepByStep__span--salmon{color:#f5cabf}.stepByStep__span--red{color:#f87c56}.stepByStep__span--blue{color:#8abadd}.stepByStep__text{font-family:"Inter";font-size:18px;font-weight:500;color:#fff;font-style:normal;margin-bottom:30px;line-height:150%;letter-spacing:-.01em}.stepByStep__armAndBox,.stepByStep__illustation{height:100%}.sticky{position:-webkit-sticky;position:sticky;top:118px}@media screen and (max-width:992px){.stepByStep__title{font-size:36px}.stepByStep__illustation{display:flex;align-items:center;width:300px}.stepByStep__illustation>picture>img{width:100%}.stepByStep__armAndBox{height:auto}}@media screen and (max-width:580px){.stepByStep,.stepByStep__steps>li{height:100%}.stepByStep__number{width:130px;height:40px}.stepByStep__container{flex-direction:column;padding:60px 20px}.stepByStep__container--small{padding:20px}.stepByStep__content{width:85%}.stepByStep__illustation{display:flex;align-items:center;width:100%;max-width:220px}.stepByStep__illustation--small{max-width:140px}.stepByStep__illustation>picture>img{width:100%}}.joinWaitlist{width:100%;height:100%;background:linear-gradient(98.6deg,#d9cfff 0,#ebf1ff 44.29%,#dde6ef 100%)}.joinWaitlist,.joinWaitlist__container,.joinWaitlist__stickers{display:flex;align-items:center;justify-content:center}.joinWaitlist__container{width:100%;height:650px;max-width:1240px;padding:0 20px;flex-direction:column}.joinWaitlist__stickers{gap:40px}.joinWaitlist__stickers>:nth-child(2){margin-bottom:90px}.joinWaitlist__title{font-family:"Inter";font-size:48px;font-weight:700;color:#f68d2e;font-style:normal;width:70%;text-align:center;margin-bottom:30px}.joinWaitlist__span{font-family:"Fairplay Display";font-style:italic;color:#2d2a26}.joinWaitlist__text{font-family:"Inter";font-size:18px;font-weight:500;color:#2d2a26;font-style:normal;margin-bottom:30px}@media screen and (max-width:992px){.joinWaitlist__title{font-size:28px}.joinWaitlist__stickers>picture>img{width:100%}}.boxes,.boxes__commingSoon{width:100%;height:100%;display:flex;align-items:center;justify-content:center}.boxes__commingSoon{font-family:"Inter";font-size:16px;font-weight:700;color:#2d2a26;font-style:normal;width:190px;height:55px;position:absolute;left:0;right:0;top:0;margin:0 auto;background:#fff;border-radius:1px 1px 60px 60px;border:3px solid #2d2a26;border-top:none}.boxes__commingSoon--orange{background:#f68d2e}.boxes__commingSoon--pink{background:#ecb3cb}.boxes__commingSoon--blue{background:#8abadd}.boxes__list,.boxes__list>li{align-items:center;justify-content:center}.boxes__list{width:inherit;height:inherit;display:grid;grid-template-columns:repeat(2,1fr)}.boxes__list>li{width:100%;height:600px;position:relative;display:flex;flex-direction:column;background:#fcfcf0;overflow:hidden;border:1px solid #2d2a26}.boxes__text,.boxes__title{font-family:"Inter";color:#2d2a26;font-style:normal}.boxes__text{width:50%;text-align:center;margin-bottom:40px;font-size:14px;font-weight:500}.boxes__title{margin-bottom:20px;letter-spacing:-3px;font-size:48px;font-weight:700}.boxes__boxIllustration{position:relative}@media screen and (max-width:992px){.boxes,.boxes__list{flex-wrap:wrap}.boxes__list{display:flex}.boxes__title{font-size:36px}}@media screen and (max-width:580px){.boxes__box{width:100%}.boxes__text{width:85%}.boxes__boxIllustration{width:50%}}.socials{display:flex;align-items:center;justify-content:center;width:100%;height:750px}.socials__spotifyContainer{padding:0 20px}.socials__spotify,.socials__tiktok{display:flex;align-items:center;height:inherit;border:1px solid #2d2a26;flex-direction:column}.socials__spotify{justify-content:center;background:#fcfcf0;width:inherit}.socials__illustration>picture>img{width:100%;height:100%}.socials__tiktok{justify-content:start;background:center no-repeat url(../img/backgrounds/gradient-background-2.jpg);background-size:cover;position:relative;width:100%;gap:30px;overflow:hidden}.socials__span{font-family:"Inter";font-size:22px;font-weight:500;color:#2d2a26;font-style:normal}.socials__linksBlock{width:inherit;height:inherit;text-decoration:none}.socials__tiktokSticker{margin-top:40px}.socials__spotifySticker{margin-bottom:40px}.socials__spotifyText,.socials__tiktokText{letter-spacing:-3px;font-family:"Inter";font-weight:700;font-style:normal}.socials__spotifyText{font-size:70px;color:#2d2a26;width:350px;line-height:95%;margin-bottom:20px}.socials__tiktokText{font-size:52px;color:#fff}.socials__iphone{position:absolute;bottom:-35px}.socials__content{margin-bottom:20px}@media screen and (max-width:992px){.socials{flex-direction:column;height:100%}.socials__tiktokText{font-size:40px}.socials__spotifyText{font-size:40px;width:60%}.socials__iphone{width:80%;position:relative}.socials__iphone>picture>img{width:100%;bottom:20px}.socials__spotifySticker{width:20%}.socials__spotifySticker>picture>img{width:100%}.socials__content{margin-bottom:40px}}.footer{width:100%;height:430px;display:flex;align-items:center;justify-content:center;flex-direction:column;background:#2d2a26}.footer__container,.footer__linksContainer{width:inherit;display:flex;align-items:center}.footer__container{height:100%;justify-content:center;max-width:1240px;padding:0 20px}.footer__linksContainer{height:inherit;justify-content:end}.footer__links{display:flex;align-items:start;justify-content:start;flex-direction:column;height:225px;margin:0 40px}.footer__links>li{margin:15px 0;font-size:16px;font-weight:600}.footer__links>li>a,.footer__socials>a{text-decoration:none;color:#fff}.footer__discoverKits{width:inherit;height:inherit;display:flex;align-items:center;justify-content:center;flex-direction:column}.footer__ctaText,.footer__links>li{font-family:"Inter";color:#fff;font-style:normal}.footer__ctaText{font-size:22px;font-weight:700;margin-bottom:20px}.footer__bottom{width:inherit;height:130px;display:flex;align-items:center;justify-content:space-between;max-width:1240px;padding:0 20px;border-top:1px solid #524c45}.footer__socials,.footer__span{font-family:"Inter";font-size:16px;font-weight:600;color:#fff;font-style:normal}.footer__socials>a{margin:0 5px}.footer__span{font-weight:500;color:#6f6a63}@media screen and (max-width:580px){.footer{height:400px}.footer__bottom{justify-content:center;flex-direction:column}.footer__links{flex-direction:row;height:auto;-moz-column-gap:35px;column-gap:35px;margin-top:20px}.footer__links>li{white-space:nowrap}.footer__container{align-items:center;flex-direction:column;justify-content:flex-end}.footer__span{margin:20px 0}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */